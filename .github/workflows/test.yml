name: Test

on: [push, pull_request]

jobs:
  tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - python-version: "3.7"
            os: ubuntu-22.04
          - python-version: "3.8"
            os: ubuntu-22.04
          - python-version: "3.9"
            os: ubuntu-latest
          - python-version: "3.10"
            os: ubuntu-latest
          - python-version: "3.11"
            os: ubuntu-latest
          - python-version: "3.12"
            os: ubuntu-latest
          - python-version: "3.13"
            os: ubuntu-latest
          - python-version: "pypy3.9"
            os: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: pip install pytest pytest-cov python-coveralls coverage flake8 pydocstyle setuptools cryptography<44

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: pip install pytest pytest-cov python-coveralls coverage flake8 pydocstyle setuptools cryptography

      - name: Lint with flake8
        run: |
          flake8 pyfritzhome --count --show-source --statistics

      - name: Run pydocstyle for analysising with Python docstring conventions.
        run: pydocstyle

      - name: Setup
        run: pip install .

      - name: Test
        run: pytest --cov=pyfritzhome --cov-report=lcov

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@main
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{ matrix.test_number }}
          parallel: true
          path-to-lcov: coverage.lcov

  finish:
    needs: tests
    runs-on: ubuntu-22.04
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@main
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
